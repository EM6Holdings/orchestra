!function(){"use strict";var e=angular.module("orchestra.task.services");e.factory("autoSaveTask",["$rootScope","$timeout","$http","orchestraService",function(e,a,t,n){return{setup:function(a,t,n){var o=this;o.saveError=!1,o.saving=!1,o.timeout=1e4,o.taskId=t,o.data=n,o.scope=a;var r=e.$on("task.data:change",function(){o.schedule()});a.$on("$destroy",r),window.onbeforeunload=function(){return o.autoSaveTimer||o.saveError?"Your latest changes haven't been saved.":void 0},a.$on("$locationChangeStart",function(e){(o.autoSaveTimer||o.saveError)&&(confirm("Your latest changes haven't been saved.\n\nAre you sure you want to leave this page?")||(window.onbeforeunload=null,e.preventDefault()))})},schedule:function(){var e=this;e.autoSaveTimer||e.scope.is_read_only||(e.autoSaveTimer=a(function(){e.save()},e.timeout))},cancel:function(){var e=this;a.cancel(e.autoSaveTimer),e.autoSaveTimer=void 0},save:function(){var e=this;if(!e.scope.is_read_only)return e.saving=!0,e.saveError=!1,e.cancel(),n.signals.fireSignal("save.before")===!1?void(e.saving=!1):void t.post("/orchestra/api/interface/save_task_assignment/",{task_id:e.taskId,task_data:e.data}).success(function(a,t,o,r){e.lastSaved=Date.now(),e.timeout=1e4,n.signals.fireSignal("save.success")}).error(function(a,t,o,r){e.saveError=!0,n.signals.fireSignal("save.error")})["finally"](function(){n.signals.fireSignal("save.finally"),e.saving=!1,e.saveError&&(e.timeout*=2,e.schedule())})}}}])}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yY2hlc3RyYS90YXNrL2pzL2F1dG9zYXZlLmpzIl0sIm5hbWVzIjpbInNlcnZpY2VNb2R1bGUiLCJhbmd1bGFyIiwibW9kdWxlIiwiZmFjdG9yeSIsIiRyb290U2NvcGUiLCIkdGltZW91dCIsIiRodHRwIiwib3JjaGVzdHJhU2VydmljZSIsInNldHVwIiwiJHNjb3BlIiwidGFza0lkIiwidGFza0RhdGEiLCJzZXJ2aWNlIiwidGhpcyIsInNhdmVFcnJvciIsInNhdmluZyIsInRpbWVvdXQiLCJkYXRhIiwic2NvcGUiLCJoYW5kbGVyIiwiJG9uIiwic2NoZWR1bGUiLCJ3aW5kb3ciLCJvbmJlZm9yZXVubG9hZCIsImF1dG9TYXZlVGltZXIiLCJlIiwiY29uZmlybSIsInByZXZlbnREZWZhdWx0IiwiaXNfcmVhZF9vbmx5Iiwic2F2ZSIsImNhbmNlbCIsInVuZGVmaW5lZCIsInNpZ25hbHMiLCJmaXJlU2lnbmFsIiwicG9zdCIsInRhc2tfaWQiLCJ0YXNrX2RhdGEiLCJzdWNjZXNzIiwic3RhdHVzIiwiaGVhZGVycyIsImNvbmZpZyIsImxhc3RTYXZlZCIsIkRhdGUiLCJub3ciLCJlcnJvciJdLCJtYXBwaW5ncyI6IkNBQUEsV0FDRSxZQUVBLElBQUlBLEdBQWdCQyxRQUFRQyxPQUFPLDBCQUVuQ0YsR0FBY0csUUFBUSxnQkFBQSxhQUFBLFdBQUEsUUFBQSxtQkFBZ0IsU0FBU0MsRUFBWUMsRUFBVUMsRUFBT0MsR0FDMUUsT0FDRUMsTUFBTyxTQUFTQyxFQUFRQyxFQUFRQyxHQUM5QixHQUFJQyxHQUFVQyxJQUNkRCxHQUFRRSxXQUFZLEVBQ3BCRixFQUFRRyxRQUFTLEVBQ2pCSCxFQUFRSSxRQUFVLElBQ2xCSixFQUFRRixPQUFTQSxFQUNqQkUsRUFBUUssS0FBT04sRUFDZkMsRUFBUU0sTUFBUVQsQ0FFaEIsSUFBSVUsR0FBVWYsRUFBV2dCLElBQUksbUJBQW9CLFdBQy9DUixFQUFRUyxZQUVWWixHQUFPVyxJQUFJLFdBQVlELEdBR3ZCRyxPQUFPQyxlQUFpQixXQUN0QixNQUFJWCxHQUFRWSxlQUFpQlosRUFBUUUsVUFDNUIsMENBRFQsUUFNRkwsRUFBT1csSUFBSSx1QkFBd0IsU0FBU0ssSUFDdENiLEVBQVFZLGVBQWlCWixFQUFRRSxhQUM5QlksUUFBUSwwRkFHWEosT0FBT0MsZUFBaUIsS0FDeEJFLEVBQUVFLHNCQUtWTixTQUFVLFdBQ1IsR0FBSVQsR0FBVUMsSUFDVEQsR0FBUVksZUFBa0JaLEVBQVFNLE1BQU1VLGVBQzNDaEIsRUFBUVksY0FBZ0JuQixFQUFTLFdBQy9CTyxFQUFRaUIsUUFDUGpCLEVBQVFJLFdBR2ZjLE9BQVEsV0FDTixHQUFJbEIsR0FBVUMsSUFDZFIsR0FBU3lCLE9BQU9sQixFQUFRWSxlQUN4QlosRUFBUVksY0FBZ0JPLFFBRTFCRixLQUFNLFdBQ0osR0FBSWpCLEdBQVVDLElBQ2QsS0FBSUQsRUFBUU0sTUFBTVUsYUFNbEIsTUFIQWhCLEdBQVFHLFFBQVMsRUFDakJILEVBQVFFLFdBQVksRUFDcEJGLEVBQVFrQixTQUNKdkIsRUFBaUJ5QixRQUFRQyxXQUFXLGtCQUFtQixPQUd6RHJCLEVBQVFHLFFBQVMsT0FHbkJULEdBQU00QixLQUFLLGtEQUNQQyxRQUFXdkIsRUFBUUYsT0FDbkIwQixVQUFheEIsRUFBUUssT0FFdEJvQixRQUFRLFNBQVNwQixFQUFNcUIsRUFBUUMsRUFBU0MsR0FDdkM1QixFQUFRNkIsVUFBWUMsS0FBS0MsTUFFekIvQixFQUFRSSxRQUFVLElBQ2xCVCxFQUFpQnlCLFFBQVFDLFdBQVcsa0JBRXJDVyxNQUFNLFNBQVMzQixFQUFNcUIsRUFBUUMsRUFBU0MsR0FDckM1QixFQUFRRSxXQUFZLEVBQ3BCUCxFQUFpQnlCLFFBQVFDLFdBQVcsZ0JBWnhDM0IsV0FjVyxXQUNQQyxFQUFpQnlCLFFBQVFDLFdBQVcsZ0JBQ3BDckIsRUFBUUcsUUFBUyxFQUNiSCxFQUFRRSxZQUVWRixFQUFRSSxTQUFXLEVBQ25CSixFQUFRUyIsImZpbGUiOiJvcmNoZXN0cmEvdGFzay9qcy9hdXRvc2F2ZS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICB2YXIgc2VydmljZU1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdvcmNoZXN0cmEudGFzay5zZXJ2aWNlcycpO1xuXG4gIHNlcnZpY2VNb2R1bGUuZmFjdG9yeSgnYXV0b1NhdmVUYXNrJywgZnVuY3Rpb24oJHJvb3RTY29wZSwgJHRpbWVvdXQsICRodHRwLCBvcmNoZXN0cmFTZXJ2aWNlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNldHVwOiBmdW5jdGlvbigkc2NvcGUsIHRhc2tJZCwgdGFza0RhdGEpIHtcbiAgICAgICAgdmFyIHNlcnZpY2UgPSB0aGlzO1xuICAgICAgICBzZXJ2aWNlLnNhdmVFcnJvciA9IGZhbHNlO1xuICAgICAgICBzZXJ2aWNlLnNhdmluZyA9IGZhbHNlO1xuICAgICAgICBzZXJ2aWNlLnRpbWVvdXQgPSAxMDAwMDtcbiAgICAgICAgc2VydmljZS50YXNrSWQgPSB0YXNrSWQ7XG4gICAgICAgIHNlcnZpY2UuZGF0YSA9IHRhc2tEYXRhO1xuICAgICAgICBzZXJ2aWNlLnNjb3BlID0gJHNjb3BlO1xuXG4gICAgICAgIHZhciBoYW5kbGVyID0gJHJvb3RTY29wZS4kb24oJ3Rhc2suZGF0YTpjaGFuZ2UnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICBzZXJ2aWNlLnNjaGVkdWxlKCk7XG4gICAgICAgIH0pO1xuICAgICAgICAkc2NvcGUuJG9uKCckZGVzdHJveScsIGhhbmRsZXIpO1xuXG4gICAgICAgIC8vIEJyb3dzZXIgY2xvc2Ugb3IgcmVsb2FkXG4gICAgICAgIHdpbmRvdy5vbmJlZm9yZXVubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGlmIChzZXJ2aWNlLmF1dG9TYXZlVGltZXIgfHwgc2VydmljZS5zYXZlRXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiAnWW91ciBsYXRlc3QgY2hhbmdlcyBoYXZlblxcJ3QgYmVlbiBzYXZlZC4nO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICAvLyBBbmd1bGFyIGxvY2F0aW9uIGNoYW5nZVxuICAgICAgICAkc2NvcGUuJG9uKCckbG9jYXRpb25DaGFuZ2VTdGFydCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICBpZiAoc2VydmljZS5hdXRvU2F2ZVRpbWVyIHx8IHNlcnZpY2Uuc2F2ZUVycm9yKSB7XG4gICAgICAgICAgICBpZiAoIWNvbmZpcm0oJ1lvdXIgbGF0ZXN0IGNoYW5nZXMgaGF2ZW5cXCd0IGJlZW4gc2F2ZWQuXFxuXFxuJyArXG4gICAgICAgICAgICAgICdBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gbGVhdmUgdGhpcyBwYWdlPycpKSB7XG4gICAgICAgICAgICAgIC8vIERpc2FibGUgY29uZmlybSBkaWFsb2cgaWYgbmF2aWdhdGluZyBhd2F5IGZyb20gdGFzayB2aWV3LlxuICAgICAgICAgICAgICB3aW5kb3cub25iZWZvcmV1bmxvYWQgPSBudWxsO1xuICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBzY2hlZHVsZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBzZXJ2aWNlID0gdGhpcztcbiAgICAgICAgaWYgKCFzZXJ2aWNlLmF1dG9TYXZlVGltZXIgJiYgIXNlcnZpY2Uuc2NvcGUuaXNfcmVhZF9vbmx5KSB7XG4gICAgICAgICAgc2VydmljZS5hdXRvU2F2ZVRpbWVyID0gJHRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBzZXJ2aWNlLnNhdmUoKTtcbiAgICAgICAgICB9LCBzZXJ2aWNlLnRpbWVvdXQpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgY2FuY2VsOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHNlcnZpY2UgPSB0aGlzO1xuICAgICAgICAkdGltZW91dC5jYW5jZWwoc2VydmljZS5hdXRvU2F2ZVRpbWVyKTtcbiAgICAgICAgc2VydmljZS5hdXRvU2F2ZVRpbWVyID0gdW5kZWZpbmVkO1xuICAgICAgfSxcbiAgICAgIHNhdmU6IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgc2VydmljZSA9IHRoaXM7XG4gICAgICAgIGlmIChzZXJ2aWNlLnNjb3BlLmlzX3JlYWRfb25seSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBzZXJ2aWNlLnNhdmluZyA9IHRydWU7XG4gICAgICAgIHNlcnZpY2Uuc2F2ZUVycm9yID0gZmFsc2U7XG4gICAgICAgIHNlcnZpY2UuY2FuY2VsKCk7XG4gICAgICAgIGlmIChvcmNoZXN0cmFTZXJ2aWNlLnNpZ25hbHMuZmlyZVNpZ25hbCgnc2F2ZS5iZWZvcmUnKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAvLyBJZiBhbnkgb2YgdGhlIHJlZ2lzdGVyZWQgc2lnbmFsIGhhbmRsZXJzIHJldHVybnMgZmFsc2UsIHByZXZlbnRcbiAgICAgICAgICAvLyBzYXZlLlxuICAgICAgICAgIHNlcnZpY2Uuc2F2aW5nID0gZmFsc2U7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgICRodHRwLnBvc3QoJy9vcmNoZXN0cmEvYXBpL2ludGVyZmFjZS9zYXZlX3Rhc2tfYXNzaWdubWVudC8nLCB7XG4gICAgICAgICAgICAndGFza19pZCc6IHNlcnZpY2UudGFza0lkLFxuICAgICAgICAgICAgJ3Rhc2tfZGF0YSc6IHNlcnZpY2UuZGF0YVxuICAgICAgICAgIH0pXG4gICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSwgc3RhdHVzLCBoZWFkZXJzLCBjb25maWcpIHtcbiAgICAgICAgICAgIHNlcnZpY2UubGFzdFNhdmVkID0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgIC8vIFJlc2V0IHRpbWVvdXQgY291bnRlciBvbiBzYXZlIHN1Y2Nlc3NcbiAgICAgICAgICAgIHNlcnZpY2UudGltZW91dCA9IDEwMDAwO1xuICAgICAgICAgICAgb3JjaGVzdHJhU2VydmljZS5zaWduYWxzLmZpcmVTaWduYWwoJ3NhdmUuc3VjY2VzcycpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmVycm9yKGZ1bmN0aW9uKGRhdGEsIHN0YXR1cywgaGVhZGVycywgY29uZmlnKSB7XG4gICAgICAgICAgICBzZXJ2aWNlLnNhdmVFcnJvciA9IHRydWU7XG4gICAgICAgICAgICBvcmNoZXN0cmFTZXJ2aWNlLnNpZ25hbHMuZmlyZVNpZ25hbCgnc2F2ZS5lcnJvcicpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmZpbmFsbHkoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBvcmNoZXN0cmFTZXJ2aWNlLnNpZ25hbHMuZmlyZVNpZ25hbCgnc2F2ZS5maW5hbGx5Jyk7XG4gICAgICAgICAgICBzZXJ2aWNlLnNhdmluZyA9IGZhbHNlO1xuICAgICAgICAgICAgaWYgKHNlcnZpY2Uuc2F2ZUVycm9yKSB7XG4gICAgICAgICAgICAgIC8vIFJldHJ5IHNhdmUgd2l0aCBleHAgYmFja29mZlxuICAgICAgICAgICAgICBzZXJ2aWNlLnRpbWVvdXQgKj0gMjtcbiAgICAgICAgICAgICAgc2VydmljZS5zY2hlZHVsZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgfSxcbiAgICB9O1xuICB9KTtcbn0pKCk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
